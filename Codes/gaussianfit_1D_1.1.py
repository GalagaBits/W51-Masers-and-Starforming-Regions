import numpy as npimport pyspeckitfrom spectral_cube import SpectralCube# Save metadatafield='W51North'spw=21directory1 = '/orange/adamginsburg/w51/vla/19A-254/derod/'maser_channel = 71spwfile = field+'_spw_'+str(spw)+'_v.fits'directory = directory1+spwfile# Position of maser in pixels (use ds9).x = 486y = 485# Cuts spectra to the appropriate length for gaussian fits.maser_channel1 = (maser_channel) - 1mc1 = maser_channel1 - 40mc2 = maser_channel1 + 40cube = SpectralCube.read(directory)extracted_spectrum = cube[:,y,x]sp = pyspeckit.Spectrum(data=extracted_spectrum[mc1:mc2],xarr=extracted_spectrum.spectral_axis[mc2:mc1])sp.xarr.convert_to_unit('km/s')sp.plotter()sp.specfit(fittype='gaussian')sp.specfit(fittype='gaussian')print(directory1+field+'_'+str(spw)+'_gaussian1D.png')cord = cube.world[maser_channel,y,x]print(cord)answer = None while answer not in ("yes", "no"):     answer = input("Enter yes or no: ")     if answer == "yes":          sp.plotter.savefig(directory1+field+'_spw_'+str(spw)+'_gaussianfit_1D.png')         print('File saved.')cube[maser_channel, :, :].quicklook()